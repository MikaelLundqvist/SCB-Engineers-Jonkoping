# Plotta trend
plotrend <- function(x,y, xl=0, yl=0, ma="", xla="", yla=""){
if (xl!=0){
plot (x, y, xlim=xl, ylim=yl, main=ma, xlab=xla, ylab=yla)
}
else{
plot (x, y)
}
#model <- lm(y ~ poly(x,3))
model <- lm(y ~ bs(x))
myPredict <- predict( model )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict[ix], col=2, lwd=2 )
return (model)
}
stat <- c(30000,31000,32000,33830,36500)
stat
statx <- c(0.1,0.25,0.5,0.75,0.9)
plotrend(statx,stat)
require(stats); require(graphics)
plotrend(statx,stat)
library(dplyr)
install.packages("dplyr")
library(dplyr)
plotrend(statx,stat)
library(splines)
plotrend(statx,stat)
plotrend <- function(x,y, xl=0, yl=0, ma="", xla="", yla=""){
if (xl!=0){
plot (x, y, xlim=xl, ylim=yl, main=ma, xlab=xla, ylab=yla)
}
else{
plot (x, y)
}
model1 <- lm(y ~ poly(x,3))
model2 <- lm(y ~ bs(x))
myPredict1 <- predict( model1 )
myPredict2 <- predict( model2 )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict1[ix], col=2, lwd=2 )
lines(x[ix], myPredict2[ix], col=3, lwd=2 )
return (model)
}
plotrend(statx,stat)
plotrend <- function(x,y, xl=0, yl=0, ma="", xla="", yla=""){
if (xl!=0){
plot (x, y, xlim=xl, ylim=yl, main=ma, xlab=xla, ylab=yla)
}
else{
plot (x, y)
}
model1 <- lm(y ~ poly(x,3))
model2 <- lm(y ~ bs(x))
myPredict1 <- predict( model1 )
myPredict2 <- predict( model2 )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict1[ix], col=2, lwd=2 )
#  lines(x[ix], myPredict2[ix], col=3, lwd=2 )
return (model)
}
plotrend(statx,stat)
plotrend <- function(x,y, xl=0, yl=0, ma="", xla="", yla=""){
if (xl!=0){
plot (x, y, xlim=xl, ylim=yl, main=ma, xlab=xla, ylab=yla)
}
else{
plot (x, y)
}
model1 <- lm(y ~ poly(x,3))
model2 <- lm(y ~ bs(x))
myPredict1 <- predict( model1 )
myPredict2 <- predict( model2 )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict1[ix], col=2, lwd=2 )
#  lines(x[ix], myPredict2[ix], col=3, lwd=2 )
#  return (model)
}
plotrend(statx,stat)
plotrend <- function(x,y, xl=0, yl=0, ma="", xla="", yla=""){
if (xl!=0){
plot (x, y, xlim=xl, ylim=yl, main=ma, xlab=xla, ylab=yla)
}
else{
plot (x, y)
}
model1 <- lm(y ~ poly(x,3))
#  model2 <- lm(y ~ bs(x))
myPredict1 <- predict( model1 )
#  myPredict2 <- predict( model2 )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict1[ix], col=2, lwd=2 )
#  lines(x[ix], myPredict2[ix], col=3, lwd=2 )
#  return (model)
}
plotrend(statx,stat)
plotrend <- function(x,y, xl=0, yl=0, ma="", xla="", yla=""){
if (xl!=0){
plot (x, y, xlim=xl, ylim=yl, main=ma, xlab=xla, ylab=yla)
}
else{
plot (x, y)
}
model1 <- lm(y ~ poly(x,2))
#  model2 <- lm(y ~ bs(x))
myPredict1 <- predict( model1 )
#  myPredict2 <- predict( model2 )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict1[ix], col=2, lwd=2 )
#  lines(x[ix], myPredict2[ix], col=3, lwd=2 )
#  return (model)
}
plotrend(statx,stat)
plotrend <- function(x,y, xl=0, yl=0, ma="", xla="", yla=""){
if (xl!=0){
plot (x, y, xlim=xl, ylim=yl, main=ma, xlab=xla, ylab=yla)
}
else{
plot (x, y)
}
model1 <- lm(y ~ poly(x,3))
#  model2 <- lm(y ~ bs(x))
myPredict1 <- predict( model1 )
#  myPredict2 <- predict( model2 )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict1[ix], col=2, lwd=2 )
#  lines(x[ix], myPredict2[ix], col=3, lwd=2 )
#  return (model)
}
plotrend(statx,stat)
plotrend <- function(x,y, xl=0, yl=0, ma="", xla="", yla=""){
if (xl!=0){
plot (x, y, xlim=xl, ylim=yl, main=ma, xlab=xla, ylab=yla)
}
else{
plot (x, y)
}
model1 <- lm(y ~ poly(x,3))
#  model2 <- lm(y ~ bs(x))
myPredict1 <- predict( model1 )
#  myPredict2 <- predict( model2 )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict1[ix], col=2, lwd=2 )
#  lines(x[ix], myPredict2[ix], col=3, lwd=2 )
return (myPredict1)
}
plotrend(statx,stat)
plotrend <- function(x,y, xl=0, yl=0, ma="", xla="", yla=""){
if (xl!=0){
plot (x, y, xlim=xl, ylim=yl, main=ma, xlab=xla, ylab=yla)
}
else{
plot (x, y)
}
model1 <- lm(y ~ poly(x,3))
#  model2 <- lm(y ~ bs(x))
myPredict1 <- predict( model1 )
#  myPredict2 <- predict( model2 )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict1[ix], col=2, lwd=2 )
#  lines(x[ix], myPredict2[ix], col=3, lwd=2 )
return (myPredict2)
}
plotrend(statx,stat)
plotrend <- function(x,y, xl=0, yl=0, ma="", xla="", yla=""){
if (xl!=0){
plot (x, y, xlim=xl, ylim=yl, main=ma, xlab=xla, ylab=yla)
}
else{
plot (x, y)
}
model1 <- lm(y ~ poly(x,3))
model2 <- lm(y ~ bs(x))
myPredict1 <- predict( model1 )
myPredict2 <- predict( model2 )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict1[ix], col=2, lwd=2 )
#  lines(x[ix], myPredict2[ix], col=3, lwd=2 )
return (myPredict2)
}
plotrend(statx,stat)
plotrend <- function(x,y, xl=0, yl=0, ma="", xla="", yla=""){
if (xl!=0){
plot (x, y, xlim=xl, ylim=yl, main=ma, xlab=xla, ylab=yla)
}
else{
plot (x, y)
}
model1 <- lm(y ~ poly(x,2))
model2 <- lm(y ~ bs(x))
myPredict1 <- predict( model1 )
myPredict2 <- predict( model2 )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict1[ix], col=2, lwd=2 )
lines(x[ix], myPredict2[ix], col=3, lwd=2 )
return (myPredict2)
}
plotrend(statx,stat)
plotrend <- function(x,y, xl=0, yl=0, ma="", xla="", yla=""){
if (xl!=0){
plot (x, y, xlim=xl, ylim=yl, main=ma, xlab=xla, ylab=yla)
}
else{
plot (x, y)
}
model1 <- lm(y ~ poly(x,3))
model2 <- lm(y ~ bs(x, df=4))
myPredict1 <- predict( model1 )
myPredict2 <- predict( model2 )
ix <- sort(x,index.return=T)$ix
lines(x[ix], myPredict1[ix], col=2, lwd=2 )
lines(x[ix], myPredict2[ix], col=3, lwd=2 )
return (myPredict2)
}
plotrend(statx,stat)
x="100-200"
x
parsestr <- function(str){
eval(parse(text=str))
}
parsestr(x)
abs(-1)
abs(parsestr(x))
parse(x)
parse(text=x)
gsub("-",":",x)
gsub("-","+",x)
parsestr(x)
y=gsub("-","+",x)
parsestr(y)
parsestr(y)/2
stat
persnr2byear <- function(pers){
as.numeric(substr(pers["Persnr"],1,2))+1900
}
parsestr <- function(str){
eval(parse(text=str))
}
# Parsa lönetabell från Sveriges Ingenjörer
parsetable <- function(instr){
mytable <- gsub("-",":",instr$Stat_Födelseår)
yearvector <- apply(data.frame(mytable), 1, parsestr)
outdata = matrix(nrow = length(unlist(yearvector)), ncol = ncol(instr) + 1)
print(dim(outdata))
counter = 1
for (i in 1:nrow(instr)){
for(j in 1:length(unlist(yearvector[i]))){
#print (c(unlist(yearvector[i])[j], instr[i,]))
#print (counter)
outdata[counter,] = c(unlist(yearvector[i])[j], instr[i,])
dim(outdata) <- c(nrow = length(unlist(yearvector)), ncol = ncol(instr) + 1)
#outdata[counter] = c(unlist(yearvector[i])[j], instr[i,])
#outdata[counter] <- counter
counter = counter + 1
}
#outdata[counter] <- data.frame(yearvector[i], instr[i,])
#counter = counter + 1
# print (nrow(data.frame(yearvector[i])))
# print(yearvector)
}
return (outdata)
}
read.excel <- function(header=TRUE,...) {
read.table("clipboard",sep="\t",header=header,stringsAsFactors=FALSE,...)
}
lönetabell <- read.excel()
lönetabell2018 <- parsetable(lönetabell)
lönetabell <- read.excel()
lönetabell2018 <- parsetable(lönetabell)
colnames(lönetabell2018)
lönetabell2018[1,]
lönetabell2018[,1]
lönetabell2018[2,]
lönetabell2018[,2]
lönetabell2018[,3]
gsub("-","+",lönetabell2018[,3])
mytab <- gsub("-","+",lönetabell2018[,3])
parsestr(mytab)
yearvector <- apply(data.frame(mytab), 1, parsestr)
yearvector
yearvector <- apply(data.frame(mytab), 1, parsestr)/2
yearvector
lölönetabell2018[,7]
lönetabell2018[,7]
lönetabell2018[,7]*yearvector
yearvector
apply(data.frame(lönetabell2018[,7]), 1, parsestr)
lönetabell2018[,7]
unlist(lönetabell2018[,7])
unlist(lönetabell2018[,7])*yearvector
unlist(lönetabell2018[,7])/unlist(lönetabell2018[,6])
unlist(lönetabell2018[,7])/unlist(lönetabell2018[,6])*yearvector
unlist(lönetabell2018[,7])/unlist(lönetabell2018[,6])*yearvector/sum(yearvector)
sum(unlist(lönetabell2018[,7])/unlist(lönetabell2018[,6])*yearvector)/sum(yearvector)
sum(unlist(lönetabell2018[,7])/unlist(lönetabell2018[,6])*apply(data.frame(mytab), 1, parsestr)/2)/sum(apply(data.frame(mytab), 1, parsestr)/2)
sum(unlist(lönetabell2018[,7])/unlist(lönetabell2018[,6])*apply(data.frame(gsub("-","+",lönetabell2018[,3])), 1, parsestr)/2)/sum(apply(data.frame(gsub("-","+",lönetabell2018[,3])), 1, parsestr)/2)
save.image("C:/R/190330.R.RData")
ci <- seq(30000,60000,by=750)
other <- seq(30000,30000,length=41)
for (year in 2019:2059){
by <- (year-25):(year-65)
#  png(paste(year, sep="", ".png"))
plot(by, ci, xlim=c(1954,2034), ylim=c(30000,80000), ann=FALSE)
points(by, other, pch=22)
title(main=paste("Löneutveckling jämförelse olika kollektiv. Revisionsår", year), font.main=4)
title(xlab="Födelseår")
title(ylab="Månadslön")
legend(1955, 80000, c("kollektiv 1","kollektiv 2"), cex=0.8,
, pch=21:22);
#  dev.off()
ci <- ci + sum(ci)*0.020/length(ci)
ci <- c(ci[1]-750,ci[1:40])
other <- other*1.02
}
ci <- seq(30000,60000,by=750)
other <- seq(30000,30000,length=41)
by <- (year-25):(year-65)
png(paste(year, sep="", ".png"))
plot(by, ci, xlim=c(1954,2034), ylim=c(30000,80000), ann=FALSE)
points(by, other, pch=22)
title(main=paste("Löneutveckling jämförelse olika kollektiv. Revisionsår", year), font.main=4)
title(xlab="Födelseår")
title(ylab="Månadslön")
legend(1955, 80000, c("kollektiv 1","kollektiv 2"), cex=0.8,
, pch=21:22);
dev.off()
ci <- ci + sum(ci)*0.020/length(ci)
ci <- c(ci[1]-750,ci[1:40])
other <- other*1.02
ci <- seq(30000,60000,by=750)
other <- seq(30000,30000,length=41)
by <- (year-25):(year-65)
plot(by, ci, xlim=c(1954,2034), ylim=c(30000,80000), ann=FALSE)
points(by, other, pch=22)
title(main=paste("Löneutveckling jämförelse olika kollektiv. Revisionsår", year), font.main=4)
title(xlab="Födelseår")
title(ylab="Månadslön")
legend(1955, 80000, c("kollektiv 1","kollektiv 2"), cex=0.8,
, pch=21:22);
ci <- ci + sum(ci)*0.020/length(ci)
ci <- c(ci[1]-750,ci[1:40])
other <- other*1.02
text(1,5,"Text1")
text(5,5,"Text1")
text("Text1")
text(15,15,"Text1")
ci <- seq(30000,60000,by=750)
other <- seq(30000,30000,length=41)
year <- 2019
by <- (year-25):(year-65)
plot(by, ci, xlim=c(1954,2034), ylim=c(30000,80000), ann=FALSE)
points(by, other, pch=22)
title(main=paste("Löneutveckling jämförelse olika kollektiv. Revisionsår", year), font.main=4)
title(xlab="Födelseår")
title(ylab="Månadslön")
legend(1955, 80000, c("kollektiv 1","kollektiv 2"), cex=0.8,
, pch=21:22);
ci <- ci + sum(ci)*0.020/length(ci)
ci <- c(ci[1]-750,ci[1:40])
other <- other*1.02
text(15,15,"Text1")
mtext("Text1", side=4)
mtext("Text1", side=3)
text(1,"Text1")
text(100,"Text1")
text(100,"Text10")
text(10,"Text10")
mtext("Text1111111111111111111111111111111111111111111111111111111111111111111", side=3)
text(c(15,15),"Text1")
text(c(150,150),"Text1")
text(c(15,15),"Text1")
text(c(15,15),labels="Text1")
text(c(15,15),labels=c("Text1"))
install.packages("scales")
library(scales)
install.packages("scales")
install.packages("revealjs")
library(revealjs)
getwd()
setwd("c:/r/presentation")
tb <- readfile("000000D2.csv") %>%
rowwise() %>%
mutate(age_l = unlist(lapply(strsplit(substr(age, 1, 5), "-"), strtoi))[1]) %>%
rowwise() %>%
mutate(age_h = unlist(lapply(strsplit(substr(age, 1, 5), "-"), strtoi))[2]) %>%
mutate(age_n = (age_l + age_h) / 2)
summary_table = 0
anova_table = 0
for (i in unique(tb$`occuptional  (SSYK 2012)`)){
temp <- filter(tb, `occuptional  (SSYK 2012)` == i)
if (dim(temp)[1] > 30){
model <-lm (log(salary) ~ year_n + poly(age_n, 3), data = temp)
summary_table <- rbind (summary_table, mutate (tidy (summary (model)), ssyk = i))
anova_table <- rbind (anova_table, mutate (tidy (Anova (model, type = 2)), ssyk = i))
}
}
merge(summary_table, anova_table, by = "ssyk", all = TRUE) %>%
filter (term.y == "poly(age_n, 3)") %>%
filter (term.x == "year_n") %>%
ggplot () +
geom_point (mapping = aes(x = estimate, y = statistic.y)) +
labs(
x = "Increase in salaries (% / year)",
y = "F-value for age"
)
library (tidyverse)
library (broom)
library (car)
library (splines)
#install_github("ZheyuanLi/SplinesUtils")
library(SplinesUtils)
readfile <- function (file1){
read_csv (file1, col_types = cols(), locale = readr::locale (encoding = "latin1"), na = c("..", "NA")) %>%
gather (starts_with("19"), starts_with("20"), key = "year", value = salary) %>%
drop_na() %>%
mutate (year_n = parse_number (year))
}
tb <- readfile("000000D2.csv") %>%
rowwise() %>%
mutate(age_l = unlist(lapply(strsplit(substr(age, 1, 5), "-"), strtoi))[1]) %>%
rowwise() %>%
mutate(age_h = unlist(lapply(strsplit(substr(age, 1, 5), "-"), strtoi))[2]) %>%
mutate(age_n = (age_l + age_h) / 2)
summary_table = 0
anova_table = 0
for (i in unique(tb$`occuptional  (SSYK 2012)`)){
temp <- filter(tb, `occuptional  (SSYK 2012)` == i)
if (dim(temp)[1] > 30){
model <-lm (log(salary) ~ year_n + poly(age_n, 3), data = temp)
summary_table <- rbind (summary_table, mutate (tidy (summary (model)), ssyk = i))
anova_table <- rbind (anova_table, mutate (tidy (Anova (model, type = 2)), ssyk = i))
}
}
merge(summary_table, anova_table, by = "ssyk", all = TRUE) %>%
filter (term.y == "poly(age_n, 3)") %>%
filter (term.x == "year_n") %>%
ggplot () +
geom_point (mapping = aes(x = estimate, y = statistic.y)) +
labs(
x = "Increase in salaries (% / year)",
y = "F-value for age"
)
